version: "3"

services:

  # Application Services

  api_load_balancer:
    image: nginx
    depends_on:
      - api
    ports:
      - "5000:80"
    volumes:
      - ./api_load_balancer/nginx.conf:/etc/nginx/nginx.conf

  api:
    build: ./api/
    depends_on:
      - broker
    deploy:
      mode: replicated
      replicas: 2
    env_file:
      - .env
    environment:
      - KAFKA_TOPIC=${RAW_DATA_TOPIC}
    ports:
      - ${API_PORT}

  data_processor:
    build: ./data_processor/
    depends_on:
      - broker
    deploy:
      mode: replicated
      replicas: ${RAW_DATA_TOPIC_PARTITIONS}
    env_file:
      - .env
    environment:
      - SOURCE_KAFKA_TOPIC=${RAW_DATA_TOPIC}
      - TARGET_KAFKA_TOPIC=${PROCESSED_DATA_TOPIC}

  database_populator:
    build: ./database_populator/
    depends_on:
      - database
    deploy:
      mode: replicated
      replicas: ${PROCESSED_DATA_TOPIC_PARTITIONS}
    env_file:
      - .env
    environment:
      - KAFKA_TOPIC=${PROCESSED_DATA_TOPIC}

  database:
    image: mongo
    restart: always
    command:
      - '--logpath'
      - '/var/log/mongodb/mongod.log'
    ports:
      - "${MONGODB_PORT}:${MONGODB_PORT}"
    environment:
      # TODO: Auth
      MONGO_INITDB_DATABASE: ${MONGODB_DATABASE}

  # Kafka and ZooKeeper

  zookeeper:
    image: confluentinc/cp-zookeeper:7.0.1
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  broker:
    image: confluentinc/cp-kafka:7.0.1
    container_name: broker
    depends_on:
      - zookeeper
    ports:
      - "29092:29092"
      - "9092:9092"
      - "9101:9101"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:29092,PLAINTEXT_HOST://broker:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_JMX_PORT: 9101
      KAFKA_JMX_HOSTNAME: broker

  # To create topics on init

  init-kafka:
    image: confluentinc/cp-kafka:7.0.1
    container_name: init_kafka
    depends_on:
      - broker
    entrypoint: [ '/bin/sh', '-c' ]
    command: |
      "
      # blocks until kafka is reachable
      kafka-topics --bootstrap-server broker:29092 --list

      echo -e 'Creating kafka topics'
      kafka-topics --bootstrap-server broker:29092 --create --if-not-exists --topic ${RAW_DATA_TOPIC} --replication-factor 1 --partitions ${RAW_DATA_TOPIC_PARTITIONS}
      kafka-topics --bootstrap-server broker:29092 --create --if-not-exists --topic ${PROCESSED_DATA_TOPIC} --replication-factor 1 --partitions ${PROCESSED_DATA_TOPIC_PARTITIONS}

      echo -e 'Successfully created the following topics:'
      kafka-topics --bootstrap-server broker:29092 --list
      "
